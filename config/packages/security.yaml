security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
    App\Entity\User\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User\User
        property: email
    # used to reload user from session & other features (e.g. switch_user)
    # used to reload user from session & other features (e.g. switch_user)
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider
      form_login:
        login_path: login
        check_path: login
        enable_csrf: true
      logout:
        path: app_logout
        target: login

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api, roles: [ROLE_ADMIN, IS_ANONYMOUS] }
    - { path: ^/user, roles: ROLE_USER }
    - { path: ^/register, roles: IS_ANONYMOUS }
    - { path: ^/login, roles: IS_ANONYMOUS }
    - { path: ^/confirm, roles: IS_ANONYMOUS }
    - { path: ^/recover, roles: IS_ANONYMOUS }
    - { path: ^/home, roles: [ROLE_USER] }
    - { path: ^/logout, roles: [ROLE_USER] }
    - { path: ^/, roles: [ROLE_USER] }
